/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Internals,
  InternalsInterface,
} from "../../../../contracts/infiniteProxy/proxy.sol/Internals";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "implementation_",
        type: "address",
      },
    ],
    name: "removeImplementationLog",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldAdmin_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin_",
        type: "address",
      },
    ],
    name: "setAdminLog",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldDummyImplementation_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newDummyImplementation_",
        type: "address",
      },
    ],
    name: "setDummyImplementationLog",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "implementation_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4[]",
        name: "sigs_",
        type: "bytes4[]",
      },
    ],
    name: "setImplementationLog",
    type: "event",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122094adec78401fc84e70dd4222db9cad287c78d3f6bd66f77421798467335b9ac064736f6c63430008130033";

type InternalsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InternalsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Internals__factory extends ContractFactory {
  constructor(...args: InternalsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Internals> {
    return super.deploy(overrides || {}) as Promise<Internals>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Internals {
    return super.attach(address) as Internals;
  }
  override connect(signer: Signer): Internals__factory {
    return super.connect(signer) as Internals__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InternalsInterface {
    return new utils.Interface(_abi) as InternalsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Internals {
    return new Contract(address, _abi, signerOrProvider) as Internals;
  }
}
