/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  Variables,
  VariablesInterface,
} from "../../../../../contracts/main/strategyBase/variables.sol/Variables";

const _abi = [
  {
    inputs: [],
    name: "MAX_SAFE_AGGREGATED_RATIO",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_SAFE_AGGREGATED_RATIO",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMISSIBLE_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STETH_ADDR",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH_ADDR",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WSTETH_ADDR",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "availableProtocol",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exchangePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "executor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "flashloanHelper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lendingLogic",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rebalancer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "revenue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "revenueExchangePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "revenueRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "safeAggregatedRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "safeProtocolRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610359806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80639e65741e116100ad578063e107e02711610071578063e107e02714610281578063e549435b1461029c578063e77c41f6146102a5578063ef2cd24b146102ae578063fbfa77cf146102bd57600080fd5b80639e65741e14610231578063af56c2071461023a578063afb5638514610248578063b3f006741461025b578063c34c08e51461026e57600080fd5b80633f221521116100f45780633f221521146101a4578063596cea76146101d757806382dfc5f7146101fa578063984773901461021557806398e1862c1461022857600080fd5b80631cc3cbec146101265780632973e0ee14610159578063308b2b811461018c5780633e9491a21461019b575b600080fd5b6101466101343660046102d0565b600a6020526000908152604090205481565b6040519081526020015b60405180910390f35b61017473ca13ea158e11de30ff5fbb37d231c9b93849b2ba81565b6040516001600160a01b039091168152602001610150565b6101466709b6e64a8ec6000081565b61014660075481565b6101c76101b23660046102fa565b600c6020526000908152604090205460ff1681565b6040519015158152602001610150565b6101c76101e53660046102d0565b600b6020526000908152604090205460ff1681565b61017473dc4fb40ca21b36e456e3879a52413a0cd57d499e81565b600054610174906001600160a01b031681565b61014660065481565b61014660055481565b61014666071afd498d000081565b600154610174906001600160a01b031681565b600454610174906001600160a01b031681565b600254610174906001600160a01b031681565b61017473ea9302eecfad89cc757ad1c17c241d4e07a16d1d81565b61014660095481565b61014660085481565b610146670d2f13f7789f000081565b600354610174906001600160a01b031681565b6000602082840312156102e257600080fd5b813560ff811681146102f357600080fd5b9392505050565b60006020828403121561030c57600080fd5b81356001600160a01b03811681146102f357600080fdfea2646970667358221220f85d902deabcb065e16062969dbd7225a8bfd68228b9feff12694cb3b1bad71064736f6c63430008130033";

type VariablesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VariablesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Variables__factory extends ContractFactory {
  constructor(...args: VariablesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Variables> {
    return super.deploy(overrides || {}) as Promise<Variables>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Variables {
    return super.attach(address) as Variables;
  }
  override connect(signer: Signer): Variables__factory {
    return super.connect(signer) as Variables__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VariablesInterface {
    return new utils.Interface(_abi) as VariablesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Variables {
    return new Contract(address, _abi, signerOrProvider) as Variables;
  }
}
