/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  LeverageModule,
  LeverageModuleInterface,
} from "../../../../../contracts/main/strategyModules/LeverageModule/LeverageModule";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newExchangePrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRevenue",
        type: "uint256",
      },
    ],
    name: "UpdateExchangePrice",
    type: "event",
  },
  {
    inputs: [],
    name: "CALLBACK_SUCCESS",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ETH_ADDR",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SAFE_AGGREGATED_RATIO",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_SAFE_AGGREGATED_RATIO",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMISSIBLE_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STETH_ADDR",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH_ADDR",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WSTETH_ADDR",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "availableProtocol",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_protocolId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_withdraw",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_debtAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_swapData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_swapGetMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_flashloanSelector",
        type: "uint256",
      },
    ],
    name: "deleverage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exchangePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "executor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "flashloanHelper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_protocolId",
        type: "uint8",
      },
    ],
    name: "getAvailableBorrowsETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_protocolId",
        type: "uint8",
      },
    ],
    name: "getAvailableWithdrawsStETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentExchangePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "newExchangePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newRevenue",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNetAssets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNetAssetsInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_protocolId",
        type: "uint8",
      },
    ],
    name: "getProtocolAccountData",
    outputs: [
      {
        internalType: "uint256",
        name: "stEthAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "debtEthAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_protocolId",
        type: "uint8",
      },
    ],
    name: "getProtocolCollateralRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralRatio",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isOK",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_protocolId",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "_isDepositOrWithdraw",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_depositOrWithdraw",
        type: "uint256",
      },
    ],
    name: "getProtocolLeverageAmount",
    outputs: [
      {
        internalType: "bool",
        name: "isLeverage",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_protocolId",
        type: "uint8",
      },
    ],
    name: "getProtocolNetAssets",
    outputs: [
      {
        internalType: "uint256",
        name: "net",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_protocolId",
        type: "uint8",
      },
    ],
    name: "getProtocolRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "ratio",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "lendingLogic",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_protocolId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_deposit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_debtAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_swapData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_swapGetMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_flashloanSelector",
        type: "uint256",
      },
    ],
    name: "leverage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_params",
        type: "bytes",
      },
    ],
    name: "onFlashLoanOne",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "oneInchRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rebalancer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revenue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "revenueExchangePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "revenueRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "safeAggregatedRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "safeProtocolRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateExchangePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "newExchangePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newRevenue",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612631806100206000396000f3fe608060405234801561001057600080fd5b50600436106102485760003560e01c80638da5cb5b1161013b578063c34c08e5116100b8578063e77c41f61161007c578063e77c41f614610581578063ef2cd24b1461058a578063f2fde38b14610599578063f5430cad146105ac578063fbfa77cf146105d657600080fd5b8063c34c08e51461051a578063c5bd170b1461052d578063cc4a015814610555578063e107e0271461055d578063e549435b1461057857600080fd5b8063ac3af208116100ff578063ac3af208146104b8578063af56c207146104d3578063af8658ab146104e1578063afb56385146104f4578063b3f006741461050757600080fd5b80638da5cb5b1461046f578063984773901461048057806398e1862c146104935780639e65741e1461049c578063a1555ec9146104a557600080fd5b80633e9491a2116101c95780635b3cc4cb1161018d5780635b3cc4cb146103f5578063715018a61461040a5780637753f47b146104125780638237e5381461042d57806382dfc5f71461045457600080fd5b80633e9491a2146103705780633f221521146103795780633f6246f5146103ac578063536ecf3d146103bf578063596cea76146103d257600080fd5b80631cc3cbec116102105780631cc3cbec146102f35780631e06781a146103135780632973e0ee14610326578063308b2b81146103595780633bfaa7e31461036857600080fd5b806308ac96d21461024d57806308bb5fb01461027a5780630d8e6e2c146102905780630ef167e4146102b857806314f70370146102cb575b600080fd5b61026061025b366004611e9a565b6105e9565b604080519283526020830191909152015b60405180910390f35b610282610667565b604051908152602001610271565b604080518082018252600681526576302e302e3160d01b602082015290516102719190611f05565b6102826102c6366004611e9a565b610709565b6102d3610786565b604080519485526020850193909352918301526060820152608001610271565b610282610301366004611e9a565b600a6020526000908152604090205481565b610282610321366004611e9a565b610805565b61034173ca13ea158e11de30ff5fbb37d231c9b93849b2ba81565b6040516001600160a01b039091168152602001610271565b6102826709b6e64a8ec6000081565b61026061082a565b61028260075481565b61039c610387366004611f2d565b600c6020526000908152604090205460ff1681565b6040519015158152602001610271565b6102826103ba366004611e9a565b610a30565b6102826103cd366004611e9a565b610a60565b61039c6103e0366004611e9a565b600b6020526000908152604090205460ff1681565b610408610403366004611f93565b610a9a565b005b610408610d5a565b61034173eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b6102827f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd981565b61034173dc4fb40ca21b36e456e3879a52413a0cd57d499e81565b6040546001600160a01b0316610341565b600054610341906001600160a01b031681565b61028260065481565b61028260055481565b6104086104b3366004611f93565b610d6e565b610341731111111254eeb25477b68fb85ed929f73a96058281565b61028266071afd498d000081565b6102826104ef36600461200a565b611019565b600154610341906001600160a01b031681565b600454610341906001600160a01b031681565b600254610341906001600160a01b031681565b61054061053b366004611e9a565b6111ed565b60408051928352901515602083015201610271565b6102606112a3565b61034173ea9302eecfad89cc757ad1c17c241d4e07a16d1d81565b61028260095481565b61028260085481565b610282670d2f13f7789f000081565b6104086105a7366004611f2d565b6113c1565b6105bf6105ba366004612094565b61143a565b604080519215158352602083019190915201610271565b600354610341906001600160a01b031681565b60008054604051635a2dffcd60e01b815260ff8416600482015230602482015282916001600160a01b031690635a2dffcd906044016040805180830381865afa15801561063a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065e91906120d3565b91509150915091565b600080610672610786565b506007546040516370a0823160e01b8152306004820152919450925073ca13ea158e11de30ff5fbb37d231c9b93849b2ba91506370a0823190602401602060405180830381865afa1580156106cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ef91906120f7565b6106f99083612126565b6107039190612139565b91505090565b6000805460405163e4b9afe760e01b815260ff841660048201523060248201526001600160a01b039091169063e4b9afe7906044015b602060405180830381865afa15801561075c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078091906120f7565b92915050565b60008054604051631b51675d60e21b81523060048201528291829182916001600160a01b031690636d459d7490602401608060405180830381865afa1580156107d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f7919061214c565b935093509350935090919293565b6000806000610813846105e9565b90925090506108228183612139565b949350505050565b336000908152600c6020526040812054819060ff166108785760405162461bcd60e51b815260206004820152600560248201526404282eae8d60db1b60448201526064015b60405180910390fd5b600354604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa1580156108c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e691906120f7565b9050806000036108ff5760055460075492509250509091565b6000610909610667565b90508161091e82670de0b6b3a7640000612182565b6109289190612199565b93506006548411156109eb5760065460000361095257505050600681905560058190556007549091565b6000670de0b6b3a76400008360055461096b9190612182565b6109759190612199565b61097f9083612139565b9050612710600854826109929190612182565b61099c9190612199565b935083600760008282546109b09190612126565b909155508390506109c18584612139565b6109d390670de0b6b3a7640000612182565b6109dd9190612199565b6005819055600655506109f1565b60058490555b60408051858152602081018590527f83d2ad38a3d31bbc70811535dd8943b0140df344c23e6e167ee1ca32f9a1a459910160405180910390a150509091565b6000806000610a3e846105e9565b909250905081610a5682670de0b6b3a7640000612182565b6108229190612199565b6000805460405163292c92cd60e11b815260ff841660048201523060248201526001600160a01b0390911690635259259a9060440161073f565b80600103610cd6576000610aad88610a60565b9050868110610af35760405162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f7567682062616c616e636560701b604482015260640161086f565b610b128873ea9302eecfad89cc757ad1c17c241d4e07a16d1d896114df565b600080836001811115610b2757610b276121bb565b6001811115610b3857610b386121bb565b8787604051602001610b4d94939291906121d1565b60408051601f1981840301815290829052600154632e7ff4ef60e11b83529092506001600160a01b031690635cffe9de90610ba690309073dc4fb40ca21b36e456e3879a52413a0cd57d499e908c90879060040161220e565b6020604051808303816000875af1158015610bc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be9919061224b565b610c285760405162461bcd60e51b815260206004820152601060248201526f199b185cda1b1bd85b8819985a5b195960821b604482015260640161086f565b600080610c348b6111ed565b91509150600080600080610c46610786565b6040516370a0823160e01b81523060048201529397509195509350915060009073ca13ea158e11de30ff5fbb37d231c9b93849b2ba906370a0823190602401602060405180830381865afa158015610ca2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc691906120f7565b9050505050505050505050610d51565b6000546040516370563d6b60e01b81526001600160a01b03909116906370563d6b90610d1e908a9073ea9302eecfad89cc757ad1c17c241d4e07a16d1d908b90600401612268565b600060405180830381600087803b158015610d3857600080fd5b505af1158015610d4c573d6000803e3d6000fd5b505050505b50505050505050565b610d6261155d565b610d6c60006115b7565b565b610d8d8773ca13ea158e11de30ff5fbb37d231c9b93849b2ba88611607565b600080610d99896111ed565b9150915060508211610e005760405162461bcd60e51b815260206004820152602a60248201527f636f6c6c61746572616c697a6174696f6e20726174696f20697320626967676560448201526972207468616e2038302560b01b606482015260840161086f565b6000610e0b8a610709565b9050878110610e555760405162461bcd60e51b81526020600482015260166024820152754465627420416d6f756e7420697320746f6f2062696760501b604482015260640161086f565b600080856001811115610e6a57610e6a6121bb565b6001811115610e7b57610e7b6121bb565b8989604051602001610e9094939291906121d1565b60408051601f1981840301815290829052600154632e7ff4ef60e11b83529092506001600160a01b031690635cffe9de90610ee990309073dc4fb40ca21b36e456e3879a52413a0cd57d499e908e90879060040161220e565b6020604051808303816000875af1158015610f08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2c919061224b565b610f6b5760405162461bcd60e51b815260206004820152601060248201526f199b185cda1b1bd85b8819985a5b195960821b604482015260640161086f565b610f748b6111ed565b90945092506000808080610f86610786565b6040516370a0823160e01b81523060048201529397509195509350915060009073ca13ea158e11de30ff5fbb37d231c9b93849b2ba906370a0823190602401602060405180830381865afa158015610fe2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100691906120f7565b5050505050505050505050505050505050565b60008080808061102b86880188612324565b93509350935093508360000361112157604051632e1a7d4d60e01b8152600481018a905273dc4fb40ca21b36e456e3879a52413a0cd57d499e90632e1a7d4d90602401600060405180830381600087803b15801561108857600080fd5b505af115801561109c573d6000803e3d6000fd5b505050506000806110d88b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ca13ea158e11de30ff5fbb37d231c9b93849b2ba868961167e565b915091506110fb8473ca13ea158e11de30ff5fbb37d231c9b93849b2ba8d611607565b61111a8473dc4fb40ca21b36e456e3879a52413a0cd57d499e8d611958565b50506111bd565b6111408273dc4fb40ca21b36e456e3879a52413a0cd57d499e8b6119d0565b61115f8273ea9302eecfad89cc757ad1c17c241d4e07a16d1d8b6114df565b6000806111978b73ca13ea158e11de30ff5fbb37d231c9b93849b2ba73dc4fb40ca21b36e456e3879a52413a0cd57d499e868961167e565b915091506111ba8473dc4fb40ca21b36e456e3879a52413a0cd57d499e8d611958565b50505b507f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd99a9950505050505050505050565b6000805460405163d7289bf760e01b815260ff8416600482015230602482015282916001600160a01b03169063d7289bf790604401602060405180830381865afa15801561123f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126391906120f7565b60ff84166000908152600a6020526040902054909250829061128d9066071afd498d000090612126565b1161129957600061129c565b60015b9050915091565b6000806000600360009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131f91906120f7565b9050806000036113385760055460075492509250509091565b6000611342610667565b90508161135782670de0b6b3a7640000612182565b6113619190612199565b93506006548411156113bb576000670de0b6b3a7640000836005546113869190612182565b6113909190612199565b61139a9083612139565b9050612710600854826113ad9190612182565b6113b79190612199565b9350505b50509091565b6113c961155d565b6001600160a01b03811661142e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161086f565b611437816115b7565b50565b6000805460ff8516808352600a602052604080842054905163291dd50760e11b81526004810192909252306024830152851515604483015260648201859052608482015282916001600160a01b03169063523baa0e9060a4016040805180830381865afa1580156114af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d391906123c8565b91509150935093915050565b60ff8084166000908152600b6020526040902054166115105760405162461bcd60e51b815260040161086f906123f6565b8060000361151d57505050565b600083838360405160200161153493929190612268565b60408051601f1981840301815291905290506115576370563d6b60e01b82611a44565b50505050565b6040546001600160a01b03163314610d6c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161086f565b604080546001600160a01b038381166001600160a01b031983168117845592519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60ff8084166000908152600b6020526040902054166116385760405162461bcd60e51b815260040161086f906123f6565b8060000361164557505050565b600083838360405160200161165c93929190612268565b60408051601f1981840301815291905290506115576241c0b960e11b82611a44565b60008060008061168d86611af6565b90925090506001600160e01b031982166312aa3caf60e01b146116f25760405162461bcd60e51b815260206004820152601860248201527f31696e63683a20496e76616c69642066756e6374696f6e210000000000000000604482015260640161086f565b80606001516001600160a01b0316306001600160a01b0316146117575760405162461bcd60e51b815260206004820152601860248201527f31696e63683a20496e76616c6964207265636569766572210000000000000000604482015260640161086f565b80516001600160a01b038981169116148015611788575080602001516001600160a01b0316876001600160a01b0316145b6117cc5760405162461bcd60e51b815260206004820152601560248201527431696e63683a20496e76616c696420746f6b656e2160581b604482015260640161086f565b80608001518910156118205760405162461bcd60e51b815260206004820152601c60248201527f31696e63683a20496e76616c696420696e70757420616d6f756e742100000000604482015260640161086f565b606073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b038a160161186d57611866731111111254eeb25477b68fb85ed929f73a960582888c611c9a565b905061188e565b61188b731111111254eeb25477b68fb85ed929f73a96058288611cc0565b90505b808060200190518101906118a291906120d3565b608084015191965094508411156118fb5760405162461bcd60e51b815260206004820152601e60248201527f31696e63683a20756e6578706563746564207370656e74416d6f756e742e0000604482015260640161086f565b8585101561194b5760405162461bcd60e51b815260206004820152601f60248201527f31696e63683a20756e65787065637465642072657475726e416d6f756e742e00604482015260640161086f565b5050509550959350505050565b60ff8084166000908152600b6020526040902054166119895760405162461bcd60e51b815260040161086f906123f6565b8060000361199657505050565b60008383836040516020016119ad93929190612268565b60408051601f19818403018152919052905061155763eda7fbcd60e01b82611a44565b60ff8084166000908152600b602052604090205416611a015760405162461bcd60e51b815260040161086f906123f6565b80600003611a0e57505050565b6000838383604051602001611a2593929190612268565b60408051601f198184030181529190529050611557635d21392760e11b825b60008282604051602001611a59929190612425565b60408051601f1981840301815290829052600080549193509182916001600160a01b031690611a89908590612456565b600060405180830381855af49150503d8060008114611ac4576040519150601f19603f3d011682016040523d82523d6000602084013e611ac9565b606091505b5091509150818190611aee5760405162461bcd60e51b815260040161086f9190611f05565b505050505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101829052601883600381518110611b4357611b43612472565b016020015184516001600160f81b031990911690911c9060109085906002908110611b7057611b70612472565b016020015185516001600160f81b031990911690911c9060089086906001908110611b9d57611b9d612472565b016020015186516001600160f81b031990911690911c908690600090611bc557611bc5612472565b602001015160f81c60f81b6001600160f81b0319161717179150600060048451611bef9190612139565b905060008167ffffffffffffffff811115611c0c57611c0c61228c565b6040519080825280601f01601f191660200182016040528015611c36576020820181803683370190505b5090506024850160208201835b601f811115611c63578251825260209283019290910190601f1901611c43565b60018160080260020a03905080835116825250505080806020019051810190611c8c91906124cd565b509597909650945050505050565b60606108228484846040518060600160405280602981526020016125d360299139611d0b565b6060611d04838360006040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c65640000815250611d0b565b9392505050565b606082471015611d6c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161086f565b600080866001600160a01b03168587604051611d889190612456565b60006040518083038185875af1925050503d8060008114611dc5576040519150601f19603f3d011682016040523d82523d6000602084013e611dca565b606091505b5091509150611ddb87838387611de6565b979650505050505050565b60608315611e55578251600003611e4e576001600160a01b0385163b611e4e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161086f565b5081610822565b6108228383815115611e6a5781518083602001fd5b8060405162461bcd60e51b815260040161086f9190611f05565b803560ff81168114611e9557600080fd5b919050565b600060208284031215611eac57600080fd5b611d0482611e84565b60005b83811015611ed0578181015183820152602001611eb8565b50506000910152565b60008151808452611ef1816020860160208601611eb5565b601f01601f19169290920160200192915050565b602081526000611d046020830184611ed9565b6001600160a01b038116811461143757600080fd5b600060208284031215611f3f57600080fd5b8135611d0481611f18565b60008083601f840112611f5c57600080fd5b50813567ffffffffffffffff811115611f7457600080fd5b602083019150836020828501011115611f8c57600080fd5b9250929050565b600080600080600080600060c0888a031215611fae57600080fd5b611fb788611e84565b96506020880135955060408801359450606088013567ffffffffffffffff811115611fe157600080fd5b611fed8a828b01611f4a565b989b979a50959895979660808701359660a0013595509350505050565b60008060008060008060a0878903121561202357600080fd5b863561202e81611f18565b9550602087013561203e81611f18565b94506040870135935060608701359250608087013567ffffffffffffffff81111561206857600080fd5b61207489828a01611f4a565b979a9699509497509295939492505050565b801515811461143757600080fd5b6000806000606084860312156120a957600080fd5b6120b284611e84565b925060208401356120c281612086565b929592945050506040919091013590565b600080604083850312156120e657600080fd5b505080516020909101519092909150565b60006020828403121561210957600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561078057610780612110565b8181038181111561078057610780612110565b6000806000806080858703121561216257600080fd5b505082516020840151604085015160609095015191969095509092509050565b808202811582820484141761078057610780612110565b6000826121b657634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fd5b84815283602082015260606040820152816060820152818360808301376000818301608090810191909152601f909201601f191601019392505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061224190830184611ed9565b9695505050505050565b60006020828403121561225d57600080fd5b8151611d0481612086565b60ff9390931683526001600160a01b03919091166020830152604082015260600190565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff811182821017156122c5576122c561228c565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156122f4576122f461228c565b604052919050565b600067ffffffffffffffff8211156123165761231661228c565b50601f01601f191660200190565b6000806000806080858703121561233a57600080fd5b843593506020850135925061235160408601611e84565b9150606085013567ffffffffffffffff81111561236d57600080fd5b8501601f8101871361237e57600080fd5b803561239161238c826122fc565b6122cb565b8181528860208385010111156123a657600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b600080604083850312156123db57600080fd5b82516123e681612086565b6020939093015192949293505050565b60208082526015908201527450726f746f636f6c20756e617661696c61626c652160581b604082015260600190565b6001600160e01b0319831681528151600090612448816004850160208701611eb5565b919091016004019392505050565b60008251612468818460208701611eb5565b9190910192915050565b634e487b7160e01b600052603260045260246000fd5b600082601f83011261249957600080fd5b81516124a761238c826122fc565b8181528460208386010111156124bc57600080fd5b610822826020830160208701611eb5565b6000806000808486036101408112156124e557600080fd5b85516124f081611f18565b945060e0601f198201121561250457600080fd5b5061250d6122a2565b602086015161251b81611f18565b8152604086015161252b81611f18565b6020820152606086015161253e81611f18565b6040820152608086015161255181611f18565b8060608301525060a0860151608082015260c086015160a082015260e086015160c08201528093505061010085015167ffffffffffffffff8082111561259657600080fd5b6125a288838901612488565b93506101208701519150808211156125b957600080fd5b506125c687828801612488565b9150509295919450925056fe416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564a26469706673582212208174f1f4f9d8826643ffb55872b74cb84011fdd7eff61f8686ebe28e074a30f064736f6c63430008130033";

type LeverageModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LeverageModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LeverageModule__factory extends ContractFactory {
  constructor(...args: LeverageModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LeverageModule> {
    return super.deploy(overrides || {}) as Promise<LeverageModule>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LeverageModule {
    return super.attach(address) as LeverageModule;
  }
  override connect(signer: Signer): LeverageModule__factory {
    return super.connect(signer) as LeverageModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LeverageModuleInterface {
    return new utils.Interface(_abi) as LeverageModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LeverageModule {
    return new Contract(address, _abi, signerOrProvider) as LeverageModule;
  }
}
